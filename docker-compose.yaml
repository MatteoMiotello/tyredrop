version: '3.9'
services:
  app:
    container_name: titw_go_server
    build:
      context: ./golang
      dockerfile: ./docker/server/Dockerfile
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
    tty: true
    ports:
      - 8080:8080
    restart: always
    volumes:
      - ./golang:/app
    depends_on:
      - postgresdb
    networks:
      - titw
  
  cron:
    container_name: titw_go_cron
    build:
      context: ./golang
      dockerfile: ./docker/cron/Dockerfile
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
    tty: true
    restart: always
    volumes:
      - ./golang:/app
      - ./import:/import
    depends_on:
      - postgresdb
    networks:
      - titw

  postgresdb:
    image: postgres:latest
    container_name: titw_postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - '2345:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
    command: postgres -c 'max_connections=500'
    networks:
      - titw

volumes:
  pg_data:

# Networks to be created to facilitate communication between containers
networks:
  titw:
    driver: bridge
