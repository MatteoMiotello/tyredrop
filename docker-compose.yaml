version: '3.9'
services:
  server:
    container_name: titw_go_server
    build:
      context: ./golang
      dockerfile: ./docker/server/Dockerfile
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
    tty: true
    ports:
      - 8080:8080
    restart: always
    volumes:
      - ./golang:/api
    depends_on:
      - postgresdb
    networks:
      - titw
  
  cron:
    container_name: titw_go_cron
    build:
      context: ./golang
      dockerfile: ./docker/cron/Dockerfile
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
    tty: true
    restart: always
    volumes:
      - ./golang:/cron
      - ./import:/import
    depends_on:
      - postgresdb
    networks:
      - titw

  app:
    build:
      context: ./react
      dockerfile: ./docker/Dockerfile
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./react:/app
      - ./react/dist:/app/dist
      - ./react/docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - server

  postgresdb:
    image: postgres:latest
    container_name: titw_postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - '2345:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
    command: postgres -c 'max_connections=500'
    networks:
      - titw

  nginx:
    image: nginx:alpine
    container_name: titw_nginx_proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./react/dist:/usr/share/nginx/html
      - ./certs:/etc/letsencrypt:ro
    depends_on:
      - app
      - server
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - ./certs:/etc/letsencrypt
      - ./react:/app
    command: certonly --webroot --webroot-path=/etc/letsencrypt --email info@pillowww.it --agree-tos --no-eff-email -d titw-app.oflow.dev --cert-name titw-api.oflow.dev -d titw-api.oflow.dev
    
volumes:
  pg_data:
  react:
  certs:

# Networks to be created to facilitate communication between containers
networks:
  titw:
    driver: bridge
