package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.28

import (
	"context"
	"errors"
	"pillowww/titw/graph/converters"
	"pillowww/titw/graph/graphErrors"
	"pillowww/titw/graph/model"
	"pillowww/titw/internal/domain/product"
)

// UpdatePriceMarkup is the resolver for the updatePriceMarkup field.
func (r *mutationResolver) UpdatePriceMarkup(ctx context.Context, id int64, markupPercentage int) (*model.ProductPriceMarkup, error) {
	ps := product.NewPriceService(
		r.ProductDao,
		r.ProductItemDao,
		r.PriceMarkupDao,
		r.CurrencyDao,
		r.ProductItemPriceDao,
	)

	markup, err := r.PriceMarkupDao.FindOneById(ctx, id)

	if err != nil {
		return nil, err
	}

	if markupPercentage < 0 {
		return nil, graphErrors.NewGraphError(ctx, errors.New("markup percentage must be positive"), "NEGATIVE_PERCENTAGE")
	}

	err = ps.UpdateMarkup(ctx, markup, markupPercentage)

	if err != nil {
		return nil, err
	}

	return converters.PriceMarkupToGraphQL(markup), nil
}
