package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.28

import (
	"context"
	"fmt"
	"pillowww/titw/graph"
	"pillowww/titw/graph/converters"
	"pillowww/titw/graph/model"
	"pillowww/titw/internal/fs/fshandlers"
)

// UserBilling is the resolver for the userBilling field.
func (r *invoiceResolver) UserBilling(ctx context.Context, obj *model.Invoice) (*model.UserBilling, error) {
	ub, err := r.UserDao.FindUserBillingById(ctx, obj.UserBillingId)

	if err != nil {
		return nil, err
	}

	return converters.UserBillingToGraphQL(ub), nil
}

// FileURL is the resolver for the fileUrl field.
func (r *invoiceResolver) FileURL(ctx context.Context, obj *model.Invoice) (string, error) {
	fs := fshandlers.NewInvoiceHandler()

	return fs.GetPublicUrl(obj.FilePath), nil
}

// Invoice returns graph.InvoiceResolver implementation.
func (r *Resolver) Invoice() graph.InvoiceResolver { return &invoiceResolver{r} }

type invoiceResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *invoiceResolver) Status(ctx context.Context, obj *model.Invoice) (*model.InvoiceStatus, error) {
	panic(fmt.Errorf("not implemented: Status - status"))
}
