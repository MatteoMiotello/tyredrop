package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"
	"pillowww/titw/graph"
	"pillowww/titw/graph/model"
)

// CreateUserBilling is the resolver for the createUserBilling field.
func (r *mutationResolver) CreateUserBilling(ctx context.Context, input *model.CreateUserBilling) (*model.UserBilling, error) {
	panic(fmt.Errorf("not implemented: CreateUserBilling - createUserBilling"))
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}

// TaxRates is the resolver for the taxRates field.
func (r *queryResolver) TaxRates(ctx context.Context) ([]*model.TaxRate, error) {
	panic(fmt.Errorf("not implemented: TaxRates - taxRates"))
}

// LegalEntityType is the resolver for the legalEntityType field.
func (r *queryResolver) LegalEntityType(ctx context.Context) ([]*model.LegalEntityType, error) {
	panic(fmt.Errorf("not implemented: LegalEntityType - legalEntityType"))
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
